#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 5.4
#  in conjunction with Tcl version 8.6
#    Jul 29, 2020 06:53:00 AM EAT  platform: Linux

import sys
import os
import tkinter as tk
import tkinter.ttk as ttk
from datetime import datetime

def set_Tk_var():
    global port_combobox
    port_combobox = tk.StringVar()

    global interval_combobox
    interval_combobox = tk.StringVar()
    interval_combobox.set("1")

    global samples_spinbox
    samples_spinbox = tk.StringVar()
    samples_spinbox.set("10")

    global hours_spinbox
    hours_spinbox = tk.StringVar()
    hours_spinbox.set("0")

    global minutes_spinbox
    minutes_spinbox = tk.StringVar()
    minutes_spinbox.set("30")

    global port_open
    port_open = tk.BooleanVar(False)

    global recording_stat
    recording_stat = tk.BooleanVar(False)

    global port
    port = None

    global freq_plot

    global current_dir
    current_dir = os.getcwd()
    data_dir = 'Frequency_samples'
    data_dir_path = os.path.join(current_dir, data_dir)
    if (os.path.isdir(data_dir_path)):
        current_dir = data_dir_path
    else:
        os.mkdir(data_dir_path)
        if (os.path.isdir(data_dir_path)):
            current_dir = data_dir_path

    global out_file_name
    out_file_name = tk.StringVar()
    currentDT = datetime.now()
    date_str = currentDT.strftime("%d_%m_%Y")
    time_str = currentDT.strftime("%H_%M")
    f_name = "sample_" + date_str + "-" + time_str + ".csv"
    f_path = os.path.join(current_dir, f_name)
    out_file_name.set(f_name)
    
    col_labels = []
    for i in range(93, 2000, 31):
        col_labels.append(str(i) + "Hz")
    with open(f_path, "w") as out_file:
        out_file.write("Date,Time,")
        for col in col_labels:
            out_file.write(col + ",")
        out_file.write("\n")

    global out_file_path
    out_file_path = tk.StringVar()
    out_file_path.set(f_path)


def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import plotter_gui
    plotter_gui.vp_start_gui()




